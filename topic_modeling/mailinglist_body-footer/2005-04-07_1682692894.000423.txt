--===============3295827350423614731==
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: quoted-printableMy question will be: how many Peters are needed to handle an XML file?=20
;)BBOn 7 Apr 2005, at 10:33, Binkley, Peter wrote:> The Digital Medievalist List (see end of message for contact=20
> information and project URLs).
>
> ----------------------------------
> Unless I've misunderstood the challenge, I think this 70-line,=20
> single-pass stylesheet will fill the bill:=20
> http://www.wallandbinkley.com/robinsonchallenge/paginate.xsl . Peter's=20
> XML text is available here:=20
> http://www.wallandbinkley.com/robinsonchallenge/text.xml . The output=20
> looks like this:
>
>  <document>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <head>The whole text and all th=
e texts</head>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <page n=3D"1">
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 <pageheader>Text 1, para 1</pageheader>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 <div>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <head>First text</hea=
d>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <p n=3D"1">some text =
starts here and goes=20
> ita<hi rend=3D"italic">lic an</hi></p>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 </div>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 </page>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <page n=3D"2">
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 <pageheader>Text 1, paras 1, 2 and 3</pageheader>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 <div>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <p n=3D"1"><hi rend=
=3D"italic">d then</hi> we get=20
> a pagebreak</p>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <p n=3D"2">so the tex=
t finishes</p>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 <p n=3D"3"> with yet =
another page </p>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=
=C2=A0=C2=A0 </div>
>  =C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0=C2=A0 </page>
>  ...
>  </document>
>
>  The pages are presented in discrete elements, each containing only=20
> the text of that page, with all markup preserved and all tags=20
> well-formed.
>
>  The basic mechanism involves using a key to index all the text nodes=20
> by their page number: =C2=A0=C2=A0=C2=A0=C2=A0
>
>  <xsl:key name=3D"text" match=3D"text()" use=3D"preceding::pb[1]/@n"/>
>
>  It is then easy to create a node-set containing all the text nodes=20
> for a given page, like this:
>
>  <xsl:variable name=3D"texts" select=3D"key('text', $thispage)"/>
>
>  With that we can process the ancestors of those text nodes to create=20
> the output for that page, like this:
>
>  <xsl:apply-templates select=3D"/div/*[.//text()[count(.|$texts) =3D=20
> count($texts)]][1]">
>
>  As it stands this stylesheet is horribly inefficient, since it has to=20
> rebuild the node-set of text nodes every time it executes a template=20
> (since you can't pass a node-set as a parameter). Perhaps there's a=20
> way to move all the processing into the main for-each loop to avoid=20
> using templates.
>
>  I'm not sure I understand why the final page break is problematic.=20
> Why would you want anything other than the way it is marked up in the=20
> source?
>
>  (I notice that I've neglected to include the text 2 head in the page=20
> header, as in the example "Second text, head", and my punctuation=20
> doesn't match that example, but I'm too tired to fix it now.)
>
>  Peter Binkley
>  peter.binkley(a)ualberta.ca
>
>
>  -----Original Message-----
>  From: dm-l-bounces(a)uleth.ca on behalf of Peter Robinson
>  Sent: Wed 4/6/2005 3:13 PM
>  To: dm-l(a)uleth.ca
>  Subject: [dm-l] what xslt can't do..?
>
>  The Digital Medievalist List (see end of message for contact=20
> information and project URLs).
>
>  ----------------------------------
>  Peter Baker says...
>  >I must say, though, Peter, that this isn't the first time you've
>  >mentioned things that XSL can't do. I'm not sure I believe that it=20
> can't
>  >be done. Someday, when we've all got lots of time, we'll have to=20
> have a
>  >programming shootout. You can offer up a problem that you think XSL
>  >can't handle, and you code it in C (or whatever it is you use), and=20
> I'll
>  >use XSLT, and we'll see who gets there first.
>
>  indeed, I have become rather a bore on this subject.=C2=A0 And I have=20
> several
>  times pointed out that XSLT has great difficulty with what is=20
> conceptually
>  a simple task: just show me the text on one page.=C2=A0 I have several=20
> times
>  set the challenge: somebody, try and do with XSLT what we do for many
>  thousands of pages (in the most basic form; just reproduce what we do=20
> for
>  a single page of the Hengwrt Chaucer, for example).=C2=A0 I have had some
>  extremely lengthy explanations of how it *could* be done, and I am
>  certainly prepared to believe these might actually work.=C2=A0 In the same=
=20
> way,
>  I am sure that with sufficient ingenuity one could use a lawnmower to=20
> heat
>  a house.=C2=A0 Just, one might find easier ways to do it.
>
>  So, here is a simple example, then:
>  <div>
>  <head>The whole text and all the texts</head>
>  <div>
>  <pb n=3D"1"/>
>  <head>First text</head>
>  <p n=3D"1">some text starts here and goes ita<hi rend=3D"italic">lic an<pb
>  n=3D"2"/>d then</i> we get a pagebreak</p>
>  <p n=3D"2">so the text finishes</p>
>  <p n=3D"3"> with yet another page <pb n=3D"3"/> and another page start=20
> </p>
>  </div>
>  <div>
>  <head>Second text</head>
>  <pb n=3D"4"/>
>  <p n=3D"1">here my new text on the next page etc etc</p>
>  <pb n=3D"5"/>
>  <p n=3D"2">here my new text on the next page etc etc</p>
>  </div>
>  </div>
>
>  So, Peter, here is your challenge.=C2=A0 Just make us an xslt file that=20
> pulls
>  out just the text on each of the five pages.=C2=A0 It would be a nice=20
> bonus if
>  each page were to have a header which told us what text there is on=20
> each
>  page (for example: page 3 contains 'First text, para 3 -- Second text,
>  head'; page 5 contains just 'Second text, para 5'). To make it=20
> slightly
>  more of a challenge: you should do this direct from this sample, and=20
> not
>  from a transform of this sample.
>
>  By the way, notice the problematics about the final page break.=C2=A0=20
> Should it
>  be..
>
>  <head>Second text</head>
>  <pb n=3D"4"/>
>  <p n=3D"1">here
>  OR
>  <head>Second text<pb n=3D"4"/></head>
>  <p n=3D"1">here
>  OR
>  <head>Second text</head>
>  <p n=3D"1"><pb n=3D"4"/>here
>
>  Answers on the back of a postage stamp please.
>
>  all the best
>  Another Peter
>
>
>
>
>  _______________________________________________
>  Digital Medievalist Project
>  Homepage: http://www.digitalmedievalist.org
>  Journal (December 2004-):=20
> http://www.digitalmedievalist.org/journal.cfm
>  RSS (announcements) server:=20
> http://www.digitalmedievalist.org/rss/rss2.cfm
>  Wiki: http://sql.uleth.ca/dmorgwiki/index.php
>  Change membership options:=20
> http://listserv.uleth.ca/mailman/listinfo/dm-l
>  Submit RSS announcement: http://www.digitalmedievalist.org/newitem.cfm
>  Contact editorial Board: digitalmedievalist(a)uleth.ca
>  dm-l mailing list
>  dm-l(a)uleth.ca
> http://listserv.uleth.ca/mailman/listinfo/dm-l
>
>
> _______________________________________________
> Digital Medievalist Project
> Homepage: http://www.digitalmedievalist.org
> Journal (December 2004-): http://www.digitalmedievalist.org/journal.cfm
> RSS (announcements) server:=20
> http://www.digitalmedievalist.org/rss/rss2.cfm
> Wiki: http://sql.uleth.ca/dmorgwiki/index.php
> Change membership options:=20
> http://listserv.uleth.ca/mailman/listinfo/dm-l
> Submit RSS announcement: http://www.digitalmedievalist.org/newitem.cfm
> Contact editorial Board: digitalmedievalist(a)uleth.ca
> dm-l mailing list
> dm-l(a)uleth.ca
> http://listserv.uleth.ca/mailman/listinfo/dm-l--===============3295827350423614731==--
